syntax = 'proto3';

// 기본 구조
message Position 
{
  float x = 1;
  float y = 2;
}

message CharacterPositionData {
    int64 playerId = 1;
    float x = 2;
    float y = 3;
}

message User {
    string name = 1;
}

enum RoomStateType {
    WAIT = 0;
    PREPARE = 1;
    INGAME = 2;
}

// 방 정보
message RoomData {
    int32 roomId = 1;
    int64 ownerId = 2; //방장 아이디.
    string name = 3; //방 이름
    int32 maxUserNum = 4; // 최대 수용 인원 수
    RoomStateType state = 5; //방 상태
    repeated UserData users = 6; // 있는 인원
}

message CharacterData {
    CharacterType characterType = 1;
    int32 hp = 2;
    int32 weapon = 3;
    int32 atk = 4;
}

message UserData {
    int64 playerId = 1;
    string nickname = 2;
    CharacterData character = 3;
}

enum PhaseType {
    NONE_PHASE = 0;
    DAY = 1;
    EVENING = 2;
    END = 3;
}

enum CharacterType {
    NONE_CHARACTER = 0;
    RED = 1; // 빨강이
    SHARK = 3; // 상어군
    MALANG = 5; // 말랑이
    FROGGY = 7; // 개굴군
    PINK = 8; // 핑크군
    SWIM_GLASSES = 9; // 물안경군
    MASK = 10; // 가면군
    DINOSAUR = 12; // 공룡이
    PINK_SLIME = 13; // 핑크슬라임
}

message GameStateData {
    // DAY 1, EVENING 2, END 3 (하루 종료시 카드 버리는 턴)
    PhaseType phaseType = 1; 
     // 다음 페이즈 시작 시점(밀리초 타임스탬프)
    int64 nextPhaseAt = 2;
}


// 통신 Payload
message C2SRegisterRequest
{
 string email = 1;
 string password = 2;
 string name = 3;
}

message S2CRegisterResponse
{
 bool success = 1;
}

message C2SLoginRequest
{
 string email = 1;
 string password = 2;
}

message S2CLoginResponse
{
 bool success = 1;
 UserData myInfo = 4;
}

message S2CMonsterAwakeNotification 
{
    int32 monsterId = 1;
}

message S2CMonsterMoveNotification 
{
    int32 monsterId = 1;
    Position direct = 2;
    Position position = 3;
    int32 speed = 4;
    int64 timestamp = 5;
}


message C2SPlayerAttackRequest
{
 float x = 1;
 float y = 2;
}

// 플레이어 공격 
message S2CPlayerAttackNotification
{
 int64 playerId = 1;
}

//몬스터 움직임
message C2SMonsterMoveRequest
{
  int32 monsterId = 1;
  Position position = 2;
}

// 몬스터 사망 
message S2CMonsterDeathNotification
{
 int32 monsterId = 1;
}

// 몬스터 체력 감소
message S2CMonsterHpUpdateNotification
{
 int32 monsterId = 1;
 int32 damage = 2;
}

// 몬스터 스폰 (초기)
message S2CMonsterSpawnNotification
{
 int32 monsterId = 1;
 int32 code = 2;
 float x = 3;
 float y = 4;
}



message C2SCreateRoomRequest {
 string name = 1;
 int32 maxUserNum = 2;
}

message S2CCreateRoomResponse {
 bool success = 1;
 RoomData room = 2;
 string message = 3;
}

message C2SGetRoomListRequest {
}
 
message S2CGetRoomListResponse {
 repeated RoomData rooms = 1;
}

message C2SJoinRoomRequest {
 int32 roomId = 1;
}

message S2CJoinRoomResponse {
    bool success = 1;
    RoomData room = 2;
    string message = 3;
}

message S2CJoinRoomNotification {
    UserData joinUser = 1;
}


message C2SLeaveRoomRequest {
}

message S2CLeaveRoomResponse {
    bool success = 1;
}

message S2CLeaveRoomNotification {
    int64 userId = 1;
}

message C2SGamePrepareRequest {
}

message S2CGamePrepareResponse{
 bool success = 1;
}

message S2CGamePrepareNotification {
 RoomData room = 1;
}

message C2SGameStartRequest {
}

message S2CGameStartResponse {
 bool success = 1;
}

message S2CGameStartNotification {
 GameStateData gameState = 1;
 repeated UserData users = 2;
 repeated CharacterPositionData characterPositions = 3;
}

message C2SPositionUpdateRequest {
 float x = 1;
 float y = 2;
}

message S2CPositionUpdateNotification {
 repeated CharacterPositionData characterPositions = 1;
}
message S2CUserUpdateNotification {
 repeated UserData users = 1;
}

message S2CPlayerDeathNotification{
 int64 playerId = 1;
}

message S2CPlayerHpUpdateNotification{
 int64 playerId = 1;
 int32 hp = 2;
}

message C2SEatFoodRequest {
  int32 foodId = 1;
  int64 playerId = 2;
}

// 식량 아이템 소모 응답
message S2CEatFoodResponse {
  bool isEaten = 1;
  string message = 2;
  int32 currentHunger = 3;
}

message GamePacket {
    oneof payload {
        S2CMonsterAwakeNotification monsterAwakeNotification = 1;
        S2CMonsterMoveNotification monsterMoveNotification = 2;
        C2SPlayerAttackRequest playerAttackRequest = 4;
        S2CPlayerAttackNotification playerAttackNotification = 5;
        S2CMonsterDeathNotification monsterDeathNotification = 6;
        S2CMonsterHpUpdateNotification monsterHpUpdateNotification = 7;
        S2CMonsterSpawnNotification monsterSpawnNotification = 8;
        C2SRegisterRequest registerRequest = 9;
        S2CRegisterResponse registerResponse = 10;
        C2SLoginRequest loginRequest = 11;
        S2CLoginResponse loginResponse = 12;
        C2SCreateRoomRequest createRoomRequest = 13;
        S2CCreateRoomResponse createRoomResponse = 14;
        C2SGetRoomListRequest getRoomListRequest = 15;
        S2CGetRoomListResponse getRoomListResponse = 16;
        C2SJoinRoomRequest joinRoomRequest = 17;
        S2CJoinRoomResponse joinRoomResponse = 18;
        C2SGamePrepareRequest gamePrepareRequest = 19;
        S2CGamePrepareResponse gamePrepareResponse = 20;
        S2CGamePrepareNotification gamePrepareNotification = 21;
        C2SGameStartRequest gameStartRequest = 22;
        S2CGameStartResponse gameStartResponse = 23;
        S2CGameStartNotification gameStartNotification = 24;
        C2SPositionUpdateRequest positionUpdateRequest = 25;
        S2CPositionUpdateNotification positionUpdateNotification = 26;
        S2CUserUpdateNotification userUpdateNotification = 27;
        S2CPlayerDeathNotification playerDeathNotification = 28;
        S2CPlayerHpUpdateNotification playerHpUpdateNotification = 29;
        C2SEatFoodRequest eatFoodRequest = 30;
        S2CEatFoodResponse eatFoodResponse = 31;
        C2SLeaveRoomRequest leaveRoomRequest = 32;
        S2CLeaveRoomResponse leaveRoomResponse = 33;
        S2CLeaveRoomNotification leaveRoomNotification = 34;
        S2CJoinRoomNotification joinRoomNotification = 35;
    }
}