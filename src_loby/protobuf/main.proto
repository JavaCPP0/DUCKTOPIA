syntax = 'proto3';

// 기본 구조

message User { // User 닉네임
  string name = 1;
  int32 userId = 2;
}

enum RoomStateType { // 방 상태
  WAIT = 0;
  PREPARE = 1;
  PLAY = 2;
}

// 방 정보
message RoomData { // 방 리스트 받을때
  int32 roomId = 1;
  int32 ownerId = 2;
  string name = 3;         // 방 이름
  int32 maxUserNum = 4;    // 최대 수용 인원 수
  RoomStateType state = 5; // 방 상태
  repeated User users = 6;
}

message MonsterData {
  int32 monsterId = 1;
  int32 monsterCode = 2;
}

message MonsterPositionData {
  int32 monsterId = 1;
  int32 monsterCode = 2;
  float x = 3;
  float y = 4;
}

// 통신 Payload
message C2SRegisterRequest // 회원가입
{
  string email = 1;
  string password = 2;
  string nickname = 3;
}

message S2CRegisterResponse // 회원가입 응답
{
  bool success = 1;
}

message C2SLoginRequest // 로그인 요청
{
  string email = 1;
  string password = 2;
}

message S2CLoginResponse // 로그인 응답
{
  bool success = 1;
  User user = 2;
}

message C2SCreateRoomRequest { // 방생성 요청
  string roomName = 1;
  int32 maxUserNum = 2;
}

message S2CCreateRoomResponse { // 방생성 응답
  bool success = 1;
  RoomData room = 2;
}

message C2SGetRoomListRequest { // 방리스트 요청
}

message S2CGetRoomListResponse { // 방리스트 응답
  repeated RoomData rooms = 1;
}

message C2SJoinRoomRequest { // 방참가 요청
  int32 roomId = 1;
}

message S2CJoinRoomResponse { // 방참가 응답
  bool success = 1;
  RoomData room = 2;
}

message S2CJoinRoomNotification { // 방참가 알림
  User user = 1;
}

message C2SLeaveRoomRequest { // 방나감 요청
}

message S2CLeaveRoomResponse { // 방나감 응답
  bool success = 1;
}

message S2CLeaveRoomNotification { // 방나감 알림
  User user = 1;
}

message C2SGamePrepareRequest { // 게임준비 요청
}

message S2CGamePrepareResponse { // 게임준비 응답 to 호스트클라이언트
  bool success = 1;
  repeated MonsterData monsters = 2;
  repeated ObjectData objects = 3;
}

message S2CGamePrepareNotification { // 게임준비 알림
  RoomData room = 1;
}

message C2SGameStartRequest { // 게임시작 요청
  repeated MonsterPositionData monsters = 1;
  repeated ObjectPositionData objects = 2;
}

// 이때 game을 만들고, player 생성, 몬스터, 오브젝트 정보 만들기

message S2CGameStartResponse { // 게임시작 응답
  bool success = 1;
}

message S2CGameStartNotification { // 게임시작 알림
  GameStateData gameState = 1;
  repeated PlayerPositionData playerPositions = 2;
  repeated MonsterPositionData monsters = 3;
  repeated ObjectPositionData objects = 4;
}

// 에러
message S2CErrorNotification {
  string errorMessage = 1;
  int64 timestamp = 2;
}


message GamePacket {
  oneof payload {
    C2SRegisterRequest registerRequest = 1;
    S2CRegisterResponse registerResponse = 2;
    C2SLoginRequest loginRequest = 3;
    S2CLoginResponse loginResponse = 4;

    C2SCreateRoomRequest createRoomRequest = 5;
    S2CCreateRoomResponse createRoomResponse = 6;
    C2SJoinRoomRequest joinRoomRequest = 7;
    S2CJoinRoomResponse joinRoomResponse = 8;
    S2CJoinRoomNotification joinRoomNotification = 9;
    C2SGetRoomListRequest getRoomListRequest = 10;
    S2CGetRoomListResponse getRoomListResponse = 11;
    C2SLeaveRoomRequest leaveRoomRequest = 12;
    S2CLeaveRoomResponse leaveRoomResponse = 13;
    S2CLeaveRoomNotification leaveRoomNotification = 14;

    C2SGamePrepareRequest gamePrepareRequest = 15;
    S2CGamePrepareResponse gamePrepareResponse = 16;
    S2CGamePrepareNotification gamePrepareNotification = 17;
    C2SGameStartRequest gameStartRequest = 18;
    S2CGameStartResponse gameStartResponse = 19;
    S2CGameStartNotification gameStartNotification = 20;

    S2CErrorNotification errorNotification = 44;
  }
}